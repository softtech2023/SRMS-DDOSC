<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="tsSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAnmSURBVGhD5Vl5UJXXFTdNl2nSmMlfTRcnf9RkRK27SWg0
        rzXViSai6WhjNanTLK1mpslMkk7jgq+NpkgWd1Fkee/xHrtIJGyyPUAR2URcWURBRUURFVFQvO/09/u8
        H/OCtZHyNMz0zJw55/u+e89+zr1v3oD/Baqrq8cfPnz4beDyI0eOrAIGg38fOAX8I3pZ/4K6ujr/Q4cO
        JeXn53saGhrk7Nmz0tLSIhcuXDCwublZTp48KVgnWFdFB/XWbxeOHTv2xP79+0tA5eLFiwLjPYiy2rdv
        nzp16pSUl5eriooKRYeQGYV1nitXrgi/lZSUXMHaeVrU/QdE8l0YIJcuXTLw+PHjcvDgQYFDcuDAgduQ
        7/nddPbatWvGHrzPFZEHtdj7AzAolMqPHj3qAYrb7VY0ktREONj97M2b64qKihSzce7cOTrRdN/6Awas
        O3HihLBUvA3yNpJYVVXV/czom3xPZ/CsmBGsOYV339Vq7g1A2Wv19fVG1CorK43SYFmYpYPaZx/I5cuX
        5caNG+LxeKSrq0va29vlzJkzxno6Zu4jpRw2+fnz5/nNrVX5Hmprawfm5eV5oNizd+/e26LL2oaRbF7y
        ikaTwiF1/fp1aWpqYjMrOm/upQMmz6nV2NjIjLyhVfoWEF0XpwmVeZcHnYFTCiBwUsEIdfr0acXo0yEi
        eTqGUWrwKEFjr7cc8uwp8Ne1St8BxuGjGINUYKScpUKFGJHGzGeZsGxo3H8Ds6ToLCn3m7IoFwEQOM/S
        ek+r9g1AySLWtne0SHFwKRrGGU9qRpzo/UyeWSGS/0/lZMpsbW2lM0e1at8AMlBZU1PTrYxRI8UoVTxp
        TcNoLGsejd7dAywpNnRPx+gE+Z4yd+3a5WEmcFr/RKvvG0DHAxx9rHWmnAiHjAnCw+jq1au0w+BZRm1t
        bcL5Tgf4je87OjoMvHnzprGWYJYbS6asrKxbNpHXDgwH35zSMPQXjA6NNqNVWlpqXBMQJUWjcMdRPI3Z
        xOgTIwM0nhliRjo7O43GJbL2zWzQCa6hTBpuyuc0wnOQNqFvgAkzgRHydgD3GGPyoG4VI8seYOS/yQFO
        IZYTS850gJQyqcOUz2EBfQ5tQt8ARk6lcG/cs2ePcdvkBGLkvUuHtGf50AGeBTSeGSDSeLOMiouLhVml
        bAaHdyzwsdqEvgFS6U+DqcCMEBWiRnkGdJfO3WaAxvNMMDPAZqZMb/k8HPEcrk3oG6AHBtEBGk1KxEXM
        OBN4/HMK9TYD7Buzobl+586d3fJJ2Q+ggdqEvgOEdVGwGaHdu3cbPKOLCBpN3JsMMOrm6IWs7qx6y4cz
        L2n1fYfCwsI8RslUYPKcQhx5vFH21gGWEbPQU+bWrVs9mv+RVt93gMA3KdQb4ZTg0DHKAkYKT1CWzt2W
        ENewDHGaf00usaCgoFir9h3Ex8d7iIwSlZLidmrcKBlxzm6OVvJ3ygCjTqeYOWYtKyurOwOmzAI6lJ//
        ilbrO4ACq6nEpMTs7GyDZ6TRfIoHHB1hY5vXaRrNPuG5wamFg1Ht2LHja3LIEwtzc49plb6H3NzcZkRd
        eiKdQNqNs4GO8Hxgb5iIyBvnBbPCUz0zM1Mg6zY5RXlZEpxWvlmr8z3k5OSMoLEaGX0jA6Qsh/T0dCOa
        cIZThtdkI+rsEb7PyMhg5G/bSyzM2SGhmW61qa5T5ifXLdcqfQ8wdC4Vu1wuTw8jDMrSQIQVnDEcIsJw
        4fse67t5d06WcnyVK5ZIt3rfucezpqpV/vJV/Syt0vcAg15nJH2BhTmZEpacJZZNRTLDXioBtgoJKmuW
        JYWn5Z2MxmFape8BToxBdFsZXbvd7iEFGmWi0fv5Nj47M0MVZmfIfEeaGr8qS00JyRNLuFtZbG41PbJc
        wqrbZGFyZcdf02sHapX3BlJTU1cChZiWliaRkZEeUEVeU2/eWJOVkSYhcdtlYnCijApKVhO+SFW/WZ8t
        ls1wIMytZtrLxWJ3q5iGDnk9qaZWq7p3gEz8AA68m5KSUgaUO2FycvKZ9JSUNVuSkn4+eJE9d7g1Wsb+
        K0H8g7fL86vT5IUNWfLipgKZHlEsM+1l8vuYKolt7JS5iUdStar7A3DGD5GeilL5A+hMOPgs6v1h/fkW
        4JfekEXhzSM/jpXxnySqX32WIpY1GcqyPltNDS00GnqmrUymf1mgwqrb5Y9JNcF6Z/+BkYvtPxv6Z7sa
        bV3reTpoqzz3+XZlWZ2pJm/MEcsW9EJEibAnFsWWeYLLW+TNlLpX9db+A0MCHZbhSx0yZnm8PLNymxiZ
        WLtDJqOppyETM2wl8nJkmaypbJEPck7KwvT6EXpr/wG/QNuC4cucMnpFvHomKIlNLZZ1mWrKRrewqdnQ
        08LLxHG0XeY56zs/Sm18TG/tPzB0iS3sl1anjF2eoJ4N3iYTV6WpSWt5PuQpjtcAW6kxmWJPdMicxJp7
        d1/qC/gttRWNsLpk3CeJ4v/pl7cygabmeH05bLfRD5Pi3Cq64ZrMja/J1Nv6E8gDfottTSP+0XO85mC8
        5hvjNQCT6Z20WvkCPfFaUvXnemP/gaFW2+N+bznUKOsaD8Yrm1pxvP6WB10o+gHjdTqcmJFSqObGV8OJ
        mpF6a/+BpxbZnhsWaJfR/4yTp4OSOF7l16szZfLGXHlxS4EEYLy+4qiQOXEHZF7CoZV6W/+Cp/4e+daw
        pVEyhplYue3WQbcWB11InuJ4ZT/MiqqU2a6qdXpL/4MRSyI2Dgl0ypgVcRivycI7k/d4DcB1Y5a9NEAv
        7z0IrgOkCQkJD4aGhn7PG/Hu+/gN/cPw8PBHnE7nwLtFrsf+hyiDsscti9jlt8zF8Sp6vArH66QQt8zY
        srOAa+4IVqv1OxQYExPz06ioqMEOh2M00B+KXgD9Hd7Njo6OngN+AX7gfIDnD03Emr+BrgCuA78BV24D
        v4mHrPXgVzqdjo/iIDPWFfXh0EDbpSeXumSkdYNnnDXUM/azdJkXsr0yzmV/Pj7a4U+7YMeTtBOBexS/
        /m79WRgbGzsIwt6DEXZgOhYWg1bB2GrQU3huAn8G/AXQNpvNdsUbw8LCruHbDfBdd4tcD1kdISEh7Xg2
        5MTGOC/OX2vrsnwajbtSvLKuj2nb6oo85oyKqoEN+7GnBJgJW6OAi8GPNKoDHv0Ywl4FfgzcjI8JoKnA
        QiwqB60AHkbkGvB8wkS8OwlsgfBLoBd7i9wXERHRygCZMqOjXY2JTufxxGj7oVitG/bsBs0ATQINAzLj
        fwIONjJA0PX9EFODaDyOHyyDkK4h4EdBAVM3AQ5MBZ2GZwMhYCaEvgF+AfiF+LaQtDc89r4NOhtyXqJM
        8IZsPE9EYEdTP/QOg9FPsHTw/THsfbi7fPoK7B863xc0h8T/KQwY8G+QlfsM2xhHgQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>